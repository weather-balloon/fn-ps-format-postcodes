{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "storageAccountNamePrefix": {
            "defaultValue": "wbfnfpc",
            "type": "string",
            "maxLength": 20,
            "minLength": 3
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "functionNamePrefix": {
            "defaultValue": "wb-fn-format-postcodes",
            "type": "string"
        },
        "storageAccountsDataLakeNamePrefix": {
            "type": "string",
            "defaultValue": "wbdatalake"
        },
        "storageAccountsDataLakeKeyNumber": {
            "type": "int",
            "defaultValue": 0,
            "allowedValues": [
                0,
                1
            ]
        },
        "dataLakeSubscriptionId": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]",
            "metadata": {
                "description": "The name of the subscription that contains the data lake."
            }
        },
        "dataLakeResourceGroupPrefix": {
            "type": "string",
            "defaultValue": "wb-datalake",
            "metadata": {
                "description": "The prefix for the RG that contains the data lake."
            }
        },
        "tagEnvironment": {
            "type": "string",
            "defaultValue": "dev",
            "allowedValues": [
                "dev",
                "test",
                "prod"
            ]
        },
        "tagService": {
            "type": "string",
            "defaultValue": "observations"
        }
    },
    "variables": {
        "storageAccountName": "[concat(parameters('storageAccountNamePrefix'), parameters('tagEnvironment'))]",
        "functionName": "[concat(parameters('functionNamePrefix'), '-', parameters('tagEnvironment'))]",
        "storageAccountsDataLakeName": "[concat(parameters('storageAccountsDataLakeNamePrefix'), parameters('tagEnvironment'))]",
        "dataLakeConnectionString": "[concat('DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=', variables('storageAccountsDataLakeName'), ';AccountKey=')]",
        "dataLakeResourceGroup": "[concat(parameters('dataLakeResourceGroupPrefix'), '-', parameters('tagEnvironment'))]",
        "storageAccountsDataLakeResourceId": "[resourceId(parameters('dataLakeSubscriptionId'), variables('dataLakeResourceGroup'), 'Microsoft.Storage/storageAccounts', variables('storageAccountsDataLakeName'))]"
    },
    "resources": [
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2015-05-01",
            "name": "[variables('functionName')]",
            "location": "[parameters('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('functionName')]"
            },
            "tags": {
                "environment": "[parameters('tagEnvironment')]",
                "service": "[parameters('tagService')]",
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('functionName'))]": "Resource"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "tags": {
                "environment": "[parameters('tagEnvironment')]",
                "service": "[parameters('tagService')]"
            },
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2016-09-01",
            "name": "[variables('functionName')]",
            "kind": "functionapp",
            "location": "[parameters('location')]",
            "properties": {
                "name": "[variables('functionName')]",
                "computeMode": "Dynamic"
            },
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "tags": {
                "environment": "[parameters('tagEnvironment')]",
                "service": "[parameters('tagService')]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2016-08-01",
            "name": "[variables('functionName')]",
            "location": "[parameters('location')]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Insights/components', variables('functionName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('functionName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountName'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "powershell"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountName'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionName'))]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components/', variables('functionName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "BlobStoreBindingConnection",
                            "value": "[concat(variables('dataLakeConnectionString'),listKeys(variables('storageAccountsDataLakeResourceId'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[parameters('storageAccountsDataLakeKeyNumber')].value)]"
                        }
                    ]
                },
                "reserved": true
            },
            "tags": {
                "environment": "[parameters('tagEnvironment')]",
                "service": "[parameters('tagService')]"
            }
        }
    ],
    "outputs": {
        "functionName": {
            "type": "string",
            "value": "[variables('functionName')]"
        }
    }
}
